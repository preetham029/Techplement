This Java Quiz Application was developed as part of an internship project to provide an interactive, command-line-based tool for creating and taking quizzes. The application is designed to be user-friendly, with simple commands that allow users to create quizzes, add questions, and evaluate their knowledge through a quiz-taking feature. It also provides detailed feedback based on performance, making it a comprehensive tool for educational and entertainment purposes.

To use the application, first, compile and run the program using the commands `javac QuizGenerator.java` followed by `java QuizGenerator` in the terminal. Upon launching, users are presented with a menu offering four options: creating a quiz, adding questions to a quiz, taking a quiz, and exiting the application.

To create a quiz, select the first option by typing `1` and pressing Enter. You will be prompted to enter a name for the quiz, which is then stored in the system. The application confirms the successful creation of the quiz. Once quizzes are created, users can add questions by selecting the second menu option. This displays a list of available quizzes, allowing users to select one by entering its corresponding number. Users are then guided through entering the question text, providing four answer options, and specifying the correct answer. Each question is added to the selected quiz, with confirmation of successful addition.

Taking a quiz is equally straightforward. By selecting the third option from the main menu, users can choose from a list of available quizzes. The selected quiz begins, displaying each question with its answer options. Users respond by entering the number corresponding to their chosen answer. Immediate feedback is provided for each response, indicating whether it is correct. After completing the quiz, the application displays a summary that includes the user’s score, percentage, and personalized feedback. For a perfect score, users receive praise for their excellent performance. Those scoring above 75% are congratulated for doing a great job, while scores between 50% and 74% receive encouragement to continue practicing. Scores below 50% are met with constructive suggestions for improvement.

The application ensures a seamless experience by handling errors gracefully. For instance, if a user enters an invalid option or quiz selection, the program displays an appropriate error message and allows the user to retry. Exiting the application is simple—users select the fourth menu option, after which the program displays a goodbye message and terminates.
